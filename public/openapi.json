{
    "openapi": "3.1.0",
    "info": {
        "title": "Hotel Management API",
        "version": "1.0.0"
    },
    "paths": {
        "/api/user/get/getall": {
            "get": {
                "summary": "Get all users",
                "responses": {
                    "200": {
                        "description": "List of users"
                    }
                }
            }
        },
        "/api/user/get/user": {
            "get": {
                "summary": "Get current user info",
                "description": "Returns the currently authenticated user info, excluding the password",
                "responses": {
                    "200": {
                        "description": "User found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/User"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Token is invalid"
                    },
                    "404": {
                        "description": "Token or User not found"
                    },
                    "500": {
                        "description": "Server error"
                    }
                }
            }
        },
        "/api/user/delete/{id}": {
            "delete": {
                "summary": "Delete user by ID",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User deleted"
                    },
                    "404": {
                        "description": "User not found"
                    }
                }
            }
        },
        "/api/user/post/login": {
            "post": {
                "summary": "User login",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "email": {
                                        "type": "string"
                                    },
                                    "password": {
                                        "type": "string"
                                    },
                                    "rememberMe": {
                                        "type": "boolean"
                                    }
                                },
                                "required": [
                                    "email",
                                    "password"
                                ]
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Login successful"
                    },
                    "401": {
                        "description": "Password is wrong"
                    },
                    "404": {
                        "description": "User not found"
                    }
                }
            }
        },
        "/api/user/post/register": {
            "post": {
                "summary": "User register",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "firstname": {
                                        "type": "string"
                                    },
                                    "lastname": {
                                        "type": "string"
                                    },
                                    "email": {
                                        "type": "string"
                                    },
                                    "password": {
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "firstname",
                                    "lastname",
                                    "email",
                                    "password"
                                ]
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "User registered successfully"
                    },
                    "400": {
                        "description": "Validation error / Email exists"
                    }
                }
            }
        },
        "/api/user/post/logout": {
            "post": {
                "summary": "Logout user",
                "responses": {
                    "200": {
                        "description": "Logged out successfully"
                    },
                    "500": {
                        "description": "Server error"
                    }
                }
            }
        },
        "/api/user/post/refresh-token": {
            "post": {
                "summary": "Refresh access token",
                "responses": {
                    "200": {
                        "description": "New access token set"
                    },
                    "401": {
                        "description": "No token"
                    },
                    "403": {
                        "description": "Invalid refresh token"
                    }
                }
            }
        },
        "/api/user/post/forgot-password-send-otp": {
            "post": {
                "summary": "Send OTP for password reset",
                "description": "Generates and sends a 6-digit OTP to the user's email address for password reset. OTP is valid for 5 minutes.",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "email": {
                                        "type": "string",
                                        "format": "email"
                                    }
                                },
                                "required": [
                                    "email"
                                ]
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OTP sent successfully"
                    },
                    "404": {
                        "description": "User not found"
                    },
                    "500": {
                        "description": "Failed to send OTP or server error"
                    }
                }
            }
        },
        "/api/user/post/forgot-password-verify-otp": {
            "post": {
                "summary": "Verify OTP for password reset",
                "description": "Verifies the 6-digit OTP code previously sent to the userâ€™s email. If valid, user can proceed to reset password.",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "email": {
                                        "type": "string",
                                        "format": "email"
                                    },
                                    "otp": {
                                        "type": "string",
                                        "example": "123456"
                                    }
                                },
                                "required": [
                                    "email",
                                    "otp"
                                ]
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OTP verified successfully"
                    },
                    "400": {
                        "description": "Invalid or expired OTP"
                    },
                    "500": {
                        "description": "Server error"
                    }
                }
            }
        },
        "/api/user/post/reset-password": {
            "post": {
                "summary": "Reset user password",
                "description": "Allows a user to set a new password after successful OTP verification. Password must meet validation rules.",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "email": {
                                        "type": "string",
                                        "format": "email"
                                    },
                                    "newPassword": {
                                        "type": "string",
                                        "minLength": 8,
                                        "maxLength": 16
                                    },
                                    "confirmPassword": {
                                        "type": "string",
                                        "minLength": 8,
                                        "maxLength": 16
                                    }
                                },
                                "required": [
                                    "email",
                                    "newPassword",
                                    "confirmPassword"
                                ]
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Password reset successfully"
                    },
                    "400": {
                        "description": "Validation or mismatch error"
                    },
                    "404": {
                        "description": "User not found"
                    },
                    "500": {
                        "description": "Server error"
                    }
                }
            }
        },
        "/api/user/patch": {
            "patch": {
                "summary": "Update user info",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "id": {
                                        "type": "string"
                                    },
                                    "firstname": {
                                        "type": "string",
                                        "maxLength": 15
                                    },
                                    "lastname": {
                                        "type": "string",
                                        "maxLength": 15
                                    }
                                },
                                "required": [
                                    "id",
                                    "firstname",
                                    "lastname"
                                ]
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "User updated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/User"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Validation error"
                    },
                    "404": {
                        "description": "User not found"
                    },
                    "500": {
                        "description": "Server error"
                    }
                }
            }
        },
        "/api/user/patch/role/{id}": {
            "patch": {
                "summary": "Toggle user's admin role",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Role updated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/User"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "User not found"
                    },
                    "500": {
                        "description": "Server error"
                    }
                }
            }
        },
        "components": {
            "schemas": {
                "User": {
                    "type": "object",
                    "properties": {
                        "_id": {
                            "type": "string"
                        },
                        "firstname": {
                            "type": "string"
                        },
                        "lastname": {
                            "type": "string"
                        },
                        "email": {
                            "type": "string"
                        },
                        "isAdmin": {
                            "type": "boolean"
                        }
                    }
                }
            }
        }
    }
}